// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace RentACarV2.Migrations
{
    [DbContext(typeof(RentACarContext))]
    partial class RentACarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Automobil", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cenaPoDanu")
                        .HasColumnType("int");

                    b.Property<int>("depozit")
                        .HasColumnType("int");

                    b.Property<int>("godiste")
                        .HasColumnType("int");

                    b.Property<string>("marka")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("auto");
                });

            modelBuilder.Entity("Models.Firma", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imeFirme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kontaktTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("firma");
                });

            modelBuilder.Entity("Models.Klijent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("kontaktTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("klijent");
                });

            modelBuilder.Entity("Models.Ponuda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("autoID")
                        .HasColumnType("int");

                    b.Property<int?>("firmaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("autoID");

                    b.HasIndex("firmaID");

                    b.ToTable("ponuda");
                });

            modelBuilder.Entity("Models.Rezervacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cena")
                        .HasColumnType("int");

                    b.Property<DateTime>("datumPreuzimanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datumVracanja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("klijentID")
                        .HasColumnType("int");

                    b.Property<string>("mestoPovratka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mestoPreuzimanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ponudaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("klijentID");

                    b.HasIndex("ponudaID");

                    b.ToTable("rezervacija");
                });

            modelBuilder.Entity("Models.Ponuda", b =>
                {
                    b.HasOne("Models.Automobil", "auto")
                        .WithMany()
                        .HasForeignKey("autoID");

                    b.HasOne("Models.Firma", "firma")
                        .WithMany()
                        .HasForeignKey("firmaID");

                    b.Navigation("auto");

                    b.Navigation("firma");
                });

            modelBuilder.Entity("Models.Rezervacija", b =>
                {
                    b.HasOne("Models.Klijent", "klijent")
                        .WithMany()
                        .HasForeignKey("klijentID");

                    b.HasOne("Models.Ponuda", "ponuda")
                        .WithMany()
                        .HasForeignKey("ponudaID");

                    b.Navigation("klijent");

                    b.Navigation("ponuda");
                });
#pragma warning restore 612, 618
        }
    }
}
